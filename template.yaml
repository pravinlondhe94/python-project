AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Sam app for user data management.


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60
    Runtime: python3.9

Resources:
  # api endpoint to trigger lambda function
  UserApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: UserApi
      StageName: prod
      Models:
        UserModel:
          type: object
          required:
            - first_name
            - last_name
            - email
          properties:
            first_name:
              type: string
            last_name:
              type: string
            email:
              type: string

  UserDataFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: userdata/
      Handler: app.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
             RestApiId: !Ref UserApi
             Path: /saveuser
             Method: post
             RequestModel:
               Model: UserModel
               Required: true

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AccessDynamodbTable
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: LambdaDynamodbPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource: arn:aws:dynamodb:*:*:table/users
  DynamodbUsersTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: "users"
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
      KeySchema:
          - AttributeName: email
            KeyType: HASH
      BillingMode: "PAY_PER_REQUEST" # On-demand pricing

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  UserApi:
    Description: "API Gateway endpoint URL for Prod stage for User Data function"
    Value: !Sub "https://${UserApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/saveuser/"
  UserDataFunction:
    Description: UserData Lambda Function ARN
    Value: !GetAtt UserDataFunction.Arn
  LambdaExecutionRole:
    Description: Implicit IAM Role created for User data function
    Value: !GetAtt LambdaExecutionRole.Arn
